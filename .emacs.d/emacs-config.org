#+TITLE: Emacs Configuration
#+AUTHOR: GarshaFall
#+DESCRIPTION: Literate Emacs Configuration for Python, Go, and C++
#+STARTUP: indent

* Global Configuration
** Package Initialization
#+BEGIN_SRC emacs-lisp
;; Initialize package sources and define repositories (MELPA, GNU, Org)
(require 'package)
(setq package-archives '(("melpa" . "https://melpa.org/packages/")
  ("gnu" . "https://elpa.gnu.org/packages/")
  ("org" . "https://orgmode.org/elpa/")))
(package-initialize)

;; Ensure `use-package` is installed, which simplifies package configuration
(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))

;; Automatically ensure packages are installed by default
(setq use-package-always-ensure t)
#+END_SRC

** Terminal and Shell
#+BEGIN_SRC emacs-lisp
;; Install and configure vterm for terminal emulation
(use-package vterm
  :ensure t
  :config
  (setq vterm-max-scrollback 10000)) ;; Increase scrollback buffer size

;; Set bash as the default shell for vterm and other shell commands
(setq shell-file-name "/bin/bash") ;; Specify the path to bash
(setq explicit-shell-file-name "/bin/bash") ;; Ensure bash is used explicitly
(setq vterm-shell "/bin/bash") ;; Use bash in vterm
#+END_SRC

** Ready Player
#+BEGIN_SRC emacs-lisp
(use-package ready-player
  :ensure t
  :config
  (ready-player-mode +1)
  (setq ready-player-set-global-bindings nil)
)
#+END_SRC

** Dashboard
#+BEGIN_SRC emacs-lisp
(use-package dashboard
  :ensure t
  :config
  (dashboard-setup-startup-hook)
  (setq dashboard-startup-banner "/home/garsha/Pictures/portal_ui.png")
  (setq dashboard-items '((recents . 10) ;; Show 10 recent files
    (bookmarks . 5) ;; Optional: Show 5 bookmarks
    (projects . 5))) ;; Optional: Show 5 projects
  (setq dashboard-center-content t)
  (setq dashboard-set-heading-icons t)
  (setq dashboard-set-file-icons t)
  (setq dashboard-footer-messages '("Welcome to your custom Emacs!")))
#+END_SRC

** Doom modeline
; M-x nerd-icons-install-fonts
#+BEGIN_SRC emacs-lisp
(use-package doom-modeline
  :ensure t
  :init (doom-modeline-mode 1)
  :custom
  (doom-modeline-height 25)) ;; Adjust height
#+END_SRC

** UI Configuration
#+BEGIN_SRC emacs-lisp
  ;; Disable unnecessary UI elements for a cleaner look
  (menu-bar-mode -1) ;; Disable menu bar
  (tool-bar-mode -1) ;; Disable tool bar
  (scroll-bar-mode -1) ;; Disable scroll bar

  ;; Disable startup screen
  ;;(setq inhibit-startup-screen t)

  ;; Adding tab width of 2
  (setq-default tab-width 2)
  (setq-default indent-tabs-mode nil)

  ;; Enable line and column numbers for better navigation
  (global-display-line-numbers-mode t)
  (column-number-mode t)

  ;; Set default font to Fira Code with size 10
  (set-face-attribute 'default nil
    :font "Fira Mono Nerd Font"
    :height 120)

  ;; Load the `timu-macos` theme for a modern and aesthetic look
  (use-package timu-rouge-theme
    :config
    (load-theme 'timu-rouge t)
    (customize-set-variable 'timu-rouge-scale-org-document-title t)
    (customize-set-variable 'timu-rouge-scale-org-document-info t)
    (customize-set-variable 'timu-rouge-scale-org-level-1 t)
    (customize-set-variable 'timu-rouge-scale-org-level-2 t)
    (customize-set-variable 'timu-rouge-scale-org-level-3 t)
    (customize-set-variable 'timu-rouge-org-intense-colors t))
#+END_SRC

* Eglot and Autocomplete Configuration
#+BEGIN_SRC emacs-lisp
  ;; dnf install nodejs-bash-language-server clang
  ;; pip install pyright
  ;; Ensure required packages are installed
  (use-package eglot
    :ensure t
    :hook ((sh-mode . eglot-ensure)
           ((c++-mode c-mode) . eglot-ensure)
           (python-mode . eglot-ensure)
           (prog-mode . eglot-ensure))
    :config
    ;; Language server configurations
    (add-to-list 'eglot-server-programs
      '(sh-mode . ("bash-language-server" "start")))
    (add-to-list 'eglot-server-programs
      '(c++-mode . ("clangd")))
    (add-to-list 'eglot-server-programs
      '(python-mode . ("pylsp")))

    ;; Enable additional eglot settings if needed
    (setq eglot-events-buffer-size 0) ;; Disable events buffer
    (setq eglot-ignored-server-capabilities '()) ;; Ignore server capabilities to avoid clashes
    (setq eglot-print-io t) ;; This will print communication between Emacs and the language server
    (define-key eglot-mode-map (kbd "C-c h") 'eldoc)
    (define-key eglot-mode-map (kbd "C-c r") 'eglot-rename)
    (define-key eglot-mode-map (kbd "C-c a") 'eglot-code-actions))

  (use-package company
    :ensure t
    :hook (eglot-managed-mode . company-mode)
    :config
    (setq company-idle-delay 0.1
      company-minimum-prefix-length 1))
#+END_SRC

#+BEGIN_SRC emacs-lisp
;; Enable flymake with shorter timeout
(setq flymake-no-changes-timeout 0.5)
#+END_SRC

* Keybindings
** VTerm
#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "C-c t") 'vterm) ;; Use "C-c t" to open vterm
#+END_SRC
